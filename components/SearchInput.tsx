// ‚úÖ components/SearchInput.tsx ‚Äì Polish performance, best-practice cho web ·∫£nh/video sex
"use client";

import { useState } from "react";

type Props = {
  placeholder?: string;
  onSearch?: (q: string) => void; // Optionally nh·∫≠n h√†m search b√™n ngo√†i
};

export default function SearchInput({ placeholder, onSearch }: Props) {
  const [query, setQuery] = useState("");

  function handleSearch(e: React.FormEvent) {
    e.preventDefault();
    const q = query.trim();
    if (!q) return;

    // N·∫øu truy·ªÅn h√†m search, g·ªçi lu√¥n (client-side filter)
    if (onSearch) return onSearch(q);

    // N·∫øu ch∆∞a l√†m filter, ch·ªâ log (sau n√†y s·∫Ω redirect)
    // window.location.href = `/search?q=${encodeURIComponent(q)}`; // Uncomment n·∫øu c√≥ trang search
    console.log("üîç T√¨m ki·∫øm:", q);
  }

  return (
    <form
      onSubmit={handleSearch}
      className="w-full max-w-lg mx-auto flex items-center gap-2"
      role="search"
      aria-label="T√¨m ki·∫øm album ho·∫∑c video"
      autoComplete="off"
    >
      <input
        type="text"
        placeholder={placeholder || "T√¨m ki·∫øm album, video..."}
        value={query}
        onChange={(e) => setQuery(e.target.value)}
        className="flex-1 bg-zinc-800 text-white px-4 py-2 rounded-xl border border-zinc-700 focus:outline-none focus:ring-2 focus:ring-pink-500 transition text-base"
        aria-label="√î t√¨m ki·∫øm"
        enterKeyHint="search"
        autoCorrect="off"
        autoCapitalize="off"
      />
      <button
        type="submit"
        className="px-4 py-2 rounded-xl bg-pink-600 text-white font-semibold hover:bg-pink-500 transition text-sm"
        aria-label="T√¨m ki·∫øm"
      >
        üîç
      </button>
    </form>
  );
}
